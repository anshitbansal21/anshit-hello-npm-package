name: Release Package

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type (one of): patch, minor, major)'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release-new-version:
    runs-on: ubuntu-latest
    steps:
      # Checkout project repository
      - name: Checkout
        uses: actions/checkout@v3

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
          # Defaults to the user or organisation that owns the workflow file

      # Configure git
      - name: Git Configuration
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "Github Actions"

      # Bump Package Version
      # Use tag latest
      - name: Bump Release Version
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ inputs.release-type }}

      # build and update docs
      - name: Setting up the release branch
        run: |
          git pull
          git checkout -b release/new-version/npm

      # Commit Changes
      - name: Commit package.json changes and create log
        run: |
          git add package.json 
          git commit -m "chore: release ${{ env.NEW_VERSION }}"
          git tag ${{ env.NEW_VERSION }}

      # Publish version to public repository
      - run: | 
        cd Hello
        npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Push repository changes
      - name: Push changes to repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push --set-upstream origin release/new-version/npm
          git push --tags
          git checkout main 
          git branch --delete release/new-version/npm

      # Update Github Release
      - name: Update Github Release Documentation
        uses: postman-eng/action-gh-release@v1
        with:
          name: ${{ env.tag_name }}
          tag_name: ${{ env.NEW_VERSION }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
